name: PHPUnit

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ develop, master ]

jobs:
  build:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['7.1', '7.2', '7.3', '7.4']
    runs-on: ${{ matrix.operating-system }}
    services:
      # Setup MYSQL
      mysql-service:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: 'crab'
          MYSQL_DATABASE: pc_core_tests
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, intl
          ini-values: post_max_size=256M, log_errors=1
          tools: pecl

      - name: Check PHP Version
        run: php -v

      - name: Clear existing composer
        run: rm -rf vendor && rm -rf composer.lock

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-
      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        run: composer install --prefer-dist --no-suggest

      - name: Run Tests
        env:
          environment_github: true
        run: composer test && composer analyse && composer sniff